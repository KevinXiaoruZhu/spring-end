<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.PT.dao.SetAccRecInfoMapper" >
    <resultMap id="BaseResultMap" type="com.PT.bean.SetAccRec.SetAccRecInfoBean" >
        <result column="set_acc_id" property="setAccId" jdbcType="VARCHAR" />
        <result column="company_name" property="companyName" jdbcType="VARCHAR" />
        <result column="driver_name" property="driverName" jdbcType="VARCHAR" />
        <result column="driver_phone" property="driverPhone" jdbcType="VARCHAR" />
        <result column="trade_money" property="tradeMoney" jdbcType="INTEGER" />
        <result column="traded_at" property="tradedAt" jdbcType="VARCHAR" />
        <result column="status" property="state" jdbcType="INTEGER" />
    </resultMap>
    <select id="selectByFactors" resultMap="BaseResultMap" parameterType="map" >
        select set_acc_id, company_name, driver_name, driver_phone, trade_money,
        date_format(traded_at, '%Y-%m-%d') traded_at, ykat_settle_account_records.status
        from ykat_settle_account_records inner join ykat_orders on ykat_settle_account_records.order_id = ykat_orders.id
        inner join ykat_drivers on driver_id = ykat_drivers.id
        inner join ykat_stores on store_id = ykat_stores.id
        where user_id = #{map.userId,jdbcType=INTEGER}
        and ykat_settle_account_records.status <![CDATA[ <> ]]> 3
        <if test="map.str != null and map.str != ''" >
            and (set_acc_id like '%${map.str}%' or driver_phone like '%${map.str}%' or driver_name like '%${map.str}%')
        </if>
        <if test="map.st != null and map.ed != null" >
            and ((ykat_settle_account_records.traded_at between #{map.st,jdbcType=TIMESTAMP} and
            #{map.ed,jdbcType=TIMESTAMP})
            or ykat_settle_account_records.traded_at is null)
        </if>
        order by ykat_settle_account_records.status ASC , ykat_settle_account_records.created_at desc
    </select>
    <select id="countByFactors" resultType="java.lang.Integer" parameterType="map" >
        select count(*)
        from ykat_settle_account_records inner join ykat_orders on ykat_settle_account_records.order_id = ykat_orders.id
        inner join ykat_drivers on driver_id = ykat_drivers.id
        inner join ykat_stores on store_id = ykat_stores.id
        where user_id = #{map.userId,jdbcType=INTEGER}
        and ykat_settle_account_records.status <![CDATA[ <> ]]> 3
        <if test="map.str != null and map.str != ''" >
            and (set_acc_id like '%${map.str}%' or driver_phone like '%${map.str}%' or driver_name like '%${map.str}%')
        </if>
        <if test="map.st != null and map.ed != null" >
            and ((ykat_settle_account_records.traded_at between #{map.st,jdbcType=TIMESTAMP} and
            #{map.ed,jdbcType=TIMESTAMP})
            or ykat_settle_account_records.traded_at is null)
        </if>
    </select>

    <update id="updateSetAccRec" parameterType="map">
        update ykat_settle_account_records a,
        (select balance, b.id, ykat_drivers.status
        from ykat_settle_account_records b inner join ykat_orders on b.order_id
        = ykat_orders.id
        inner join ykat_drivers on driver_id = ykat_drivers.id
        ) money
        set a.status = 2, a.traded_at = now()
        where a.status = 1 and a.set_acc_id in
        <trim prefix="(" prefixOverrides="[" suffix=")" suffixOverrides="]">${list}</trim>
        and a.id = money.id
        and money.status = 1
    </update>
    <update id="updateDriver" parameterType="map">
        update ykat_drivers a,
        (select sum(b.trade_money) trade_money, driver.id
        from ykat_settle_account_records b inner join ykat_orders on b.order_id = ykat_orders.id
        inner join ykat_drivers driver on driver_id = driver.id
        where b.set_acc_id in
        <trim prefix="(" prefixOverrides="[" suffix=")" suffixOverrides="]">${list}</trim>
        and b.status = 1
        group by driver.id) money
        set a.balance = a.balance - money.trade_money, a.status = 1
        where a.id = money.id
        and a.balance &gt;= money.trade_money
    </update>
</mapper>